{"version":3,"sources":["routes/routePath.js","store/types/login.type.js","utils/utils.js","components/common/Button.jsx","components/Header/index.jsx","components/Default/Default.jsx","components/Home/index.jsx","apis/serviceRoute.js","components/common/Loader.jsx","components/Login/index.jsx","components/Login/SignUp.jsx","components/Login/Forgot.jsx","components/Login/ResetPassword.jsx","store/types/jobs.type.js","components/Jobs/PostedJobs.jsx","components/Header/PostJob.jsx","App.js","reportWebVitals.js","store/reducers/jobs.reducer.js","store/reducers/login.reducer.js","store/reducers/reducer.js","apis/axios.config.js","store/sagas/jobs.saga.js","store/sagas/login.saga.js","store/sagas/index.js","store/store.config.js","index.js"],"names":["routePath","USER_LOGIN","USER_SIGNUP","SAVE_USER_LOGIN","SAVE_USER_LOGIN_ERROR","SAVE_USER_SIGNUP","SAVE_USER_SIGNUP_ERROR","LOGIN_LOADER","SIGNUP_LOADER","FORGOT_PASSWORD","SAVE_FORGOT_PASSWORD","SAVE_FORGOT_PASSWORD_ERROR","RESET_PASSWORD","SAVE_RESET_PASSWORD","SAVE_RESET_PASSWORD_ERROR","validateEmail","mail","test","setLocalStorage","key","value","localStorage","setItem","getLocalStorage","getItem","clearLocalStorage","clear","Button","title","onClickHandler","className","onClick","type","Header","useState","isLogout","setIsLogout","isLoggedIn","setIsLoggedIn","loginResponse","useSelector","state","login","history","useHistory","dispatch","useDispatch","currentPath","location","pathname","useEffect","console","log","class","replace","to","name","charAt","push","payload","setTimeout","Default","Home","href","src","alt","width","height","serviceRoute","url","email","Loader","Login","password","setPayload","errorMsg","setErrorMsg","loginLoader","loginResponseErr","onChangeHandler","e","target","htmlFor","onChange","autoComplete","required","id","placeholder","valid","loginData","validateObj","isValid","error","length","checkLoginValidation","data","SignUp","userRole","confirmPassword","skills","signUpLoader","signupResponseErr","for","map","err","signupData","checkSignupValidation","Forgot","setEmail","forgotResponseErr","checkForgotValidation","ResetPassword","resetResponseErr","resetResponse","resetData","checkResetPwdValidation","POST_JOB_LOADER","POST_JOB","SAVE_POST_JOB","SAVE_POST_JOB_ERROR","POSTED_JOB_LOADER","GET_POSTED_JOB","SAVE_POSTED_JOB","PostedJobs","jobsList","setJobsList","jobs","postedJobLoader","postedJobResponse","PostJob","description","apiErrorMsg","setApiErrorMsg","postJobLoader","postJobResponseErr","jobData","checkPostJobValidation","App","exact","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","postJobResponse","signUpResponse","forgotResponse","combineReducers","axiosInstance","axios","create","baseURL","process","interceptors","response","use","status","message","Promise","reject","config","headers","authorization","axiosRequest","a","undefined","token","get","code","jobPost","postJob","getJobsPosted","getPostedJob","action","put","call","res","takeEvery","jobSaga","userLogin","loginUser","signUpLogin","signUpUser","pwdForgot","forgotPwd","pwdReset","resetPwd","body","errors","loginSaga","rootSaga","all","persistConfig","storage","sagaMiddleware","createSagaMiddleware","persistedReducer","persistReducer","reducer","store","createStore","applyMiddleware","run","persistReduxStore","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.75b2f625.chunk.js","sourcesContent":["export const routePath = {\r\n  root: \"/naukricloneapp\",\r\n  home: \"/naukricloneapp/home\",\r\n  login: \"/naukricloneapp/login\",\r\n  signUp: \"/naukricloneapp/signup\",\r\n  forgot: \"/naukricloneapp/forget-password\",\r\n  reset: \"/naukricloneapp/reset\",\r\n  logout: \"/naukricloneapp/logout\",\r\n  jobsPosted: \"/naukricloneapp/jobs/posted\",\r\n  jobPost: \"/naukricloneapp/job/post\",\r\n};\r\n","export const USER_LOGIN = \"USER_LOGIN\";\r\nexport const USER_SIGNUP = \"USER_SIGNUP\";\r\nexport const SAVE_USER_LOGIN = \"SAVE_USER_LOGIN\";\r\nexport const SAVE_USER_LOGIN_ERROR = \"SAVE_USER_LOGIN_ERROR\";\r\nexport const SAVE_USER_SIGNUP = \"SAVE_USER_SIGNUP\";\r\nexport const SAVE_USER_SIGNUP_ERROR = \"SAVE_USER_SIGNUP_ERROR\";\r\nexport const LOGIN_LOADER = \"LOGIN_LOADER\";\r\nexport const SIGNUP_LOADER = \"SIGNUP_LOADER\";\r\nexport const FORGOT_PASSWORD = \"FORGOT_PASSWORD\";\r\nexport const SAVE_FORGOT_PASSWORD = \"SAVE_FORGOT_PASSWORD\";\r\nexport const SAVE_FORGOT_PASSWORD_ERROR = \"SAVE_FORGOT_PASSWORD_ERROR\";\r\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\r\nexport const SAVE_RESET_PASSWORD = \"SAVE_RESET_PASSWORD\";\r\nexport const SAVE_RESET_PASSWORD_ERROR = \"SAVE_RESET_PASSWORD_ERROR\";\r\n","function validateEmail(mail) {\r\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const checkLoginValidation = (loginData) => {\r\n  let validateObj = { isValid: true, error: \"\" };\r\n  const { email = \"\", password = \"\" } = loginData;\r\n\r\n  if (!validateEmail(email)) {\r\n    validateObj.error = \"Please enter valid email!\";\r\n    validateObj.isValid = false;\r\n  } else if (password.length < 8) {\r\n    validateObj.error = \"password length at-least should be 8\";\r\n    validateObj.isValid = false;\r\n  }\r\n  return validateObj;\r\n};\r\n\r\nexport const checkSignupValidation = (signupData) => {\r\n  let validateObj = { isValid: true, error: \"\" };\r\n  const {\r\n    name = \"\",\r\n    email = \"\",\r\n    password = \"\",\r\n    confirmPassword = \"\",\r\n  } = signupData;\r\n\r\n  if (name == \"\") {\r\n    validateObj.error = \"Please enter valid full name\";\r\n    validateObj.isValid = false;\r\n  } else if (!validateEmail(email)) {\r\n    validateObj.error = \"Please enter valid email!\";\r\n    validateObj.isValid = false;\r\n  } else if (password.length < 8) {\r\n    validateObj.error = \"password length at-least should be 8\";\r\n    validateObj.isValid = false;\r\n  } else if (confirmPassword !== password) {\r\n    validateObj.error = \"confirm password should be same as create password\";\r\n    validateObj.isValid = false;\r\n  }\r\n\r\n  return validateObj;\r\n};\r\n\r\nexport const checkForgotValidation = (email = \"\") => {\r\n  let validateObj = { isValid: true, error: \"\" };\r\n\r\n  if (!validateEmail(email)) {\r\n    validateObj.error = \"Please enter valid email!\";\r\n    validateObj.isValid = false;\r\n  }\r\n\r\n  return validateObj;\r\n};\r\n\r\nexport const checkResetPwdValidation = (resetData) => {\r\n  let validateObj = { isValid: true, error: \"\" };\r\n  const { password = \"\", confirmPassword = \"\" } = resetData;\r\n\r\n  if (password.length < 8) {\r\n    validateObj.error = \"password length at-least should be 8\";\r\n    validateObj.isValid = false;\r\n  } else if (password !== confirmPassword) {\r\n    validateObj.error = \"confirm password should be same as create password\";\r\n    validateObj.isValid = false;\r\n  }\r\n  return validateObj;\r\n};\r\n\r\nexport const checkPostJobValidation = (jobData) => {\r\n  const { title = \"\", description = \"\", location = \"\" } = jobData;\r\n\r\n  let validateObj = { isValid: true, error: \"\" };\r\n\r\n  if (title === '') {\r\n    validateObj.error = \"All fields are mandatory.\";\r\n    validateObj.isValid = false;\r\n  } else if (description === '') {\r\n    validateObj.error = \"All fields are mandatory.\";\r\n    validateObj.isValid = false;\r\n  }\r\n  else if (location === '') {\r\n    validateObj.error = \"All fields are mandatory.\";\r\n    validateObj.isValid = false;\r\n  }\r\n\r\n  return validateObj;\r\n};\r\n\r\nexport const setLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, value);\r\n};\r\n\r\nexport const getLocalStorage = (key) => {\r\n  return localStorage.getItem(key);\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  return localStorage.clear();\r\n};\r\n","import React from \"react\";\r\nimport \"./button.css\";\r\n\r\nexport const Button = ({ title, onClickHandler }) => {\r\n  return (\r\n    <div className=\"btn_container\" onClick={onClickHandler}>\r\n      <button type=\"button\" className=\"common_btn\">\r\n        {title}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { routePath } from \"../../routes/routePath\";\r\nimport { SAVE_USER_LOGIN } from \"../../store/types/login.type\";\r\nimport { clearLocalStorage } from \"../../utils/utils\";\r\nimport { Button } from \"../common/Button\";\r\n\r\nexport const Header = () => {\r\n  const [isPostJob, setIsPostJob] = useState(false);\r\n  const [isLogout, setIsLogout] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const { loginResponse } = useSelector((state) => state.login);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  let currentPath = history?.location?.pathname;\r\n\r\n  useEffect(() => {\r\n    if (loginResponse) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  }, [loginResponse]);\r\n\r\n  const onLogoutHandler = () => {\r\n    setIsLogout(true);\r\n    clearLocalStorage();\r\n    history.push(routePath.home);\r\n    dispatch({ type: SAVE_USER_LOGIN, payload: null });\r\n    setTimeout(() => setIsLogout(false), 1000);\r\n  };\r\n\r\n  console.log(loginResponse, \"loginResponse\", currentPath ==routePath.home);\r\n  return (\r\n    <header>\r\n      <div class=\"header\">\r\n        <div className=\"logo\" onClick={() => history.replace(routePath.home)}>\r\n          <span className=\"logoName\">My</span>\r\n          <span className=\"logoTitle\">Jobs</span>\r\n        </div>\r\n        {(currentPath === routePath.root || currentPath === routePath.home) && (\r\n          <div className=\"loginBtn\">\r\n            <Link to={routePath.login}>Login/Signup</Link>\r\n          </div>\r\n        )}\r\n        {isLoggedIn && (\r\n          <div className=\"profile\">\r\n            <div className=\"jobPost\">\r\n            <Link to={routePath.jobPost}>Post a job</Link>\r\n            </div>\r\n              <div className=\"profileName\">{loginResponse?.name?.charAt(0)}</div>\r\n              <div className=\"logoutBtn\">\r\n                <ul>\r\n                  <li onClick={onLogoutHandler}> logout</li>\r\n                </ul>\r\n                </div>\r\n          </div>\r\n        )}\r\n        {isLogout && (\r\n          <div class=\"successLogout\">\r\n            <em class=\"close\" onClick={() => setIsLogout(false)}></em>\r\n            <label>Logout</label>\r\n            <span>You have successfully logged out.</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nexport const Default = () => {\r\n  return <div>Not found</div>;\r\n};\r\n","import React from \"react\";\r\nimport { routePath } from \"../../routes/routePath\";\r\nimport \"./home.css\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <>\r\n      <div class=\"bannerSection\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-5\">\r\n              <h1>\r\n                Welcome to <br /> My<span>Jobs</span>\r\n              </h1>\r\n              <a href={routePath.login} class=\"getStarted btn\">\r\n                Get Started\r\n              </a>\r\n            </div>\r\n            <div class=\"col-lg-7\">\r\n              <figure>\r\n                <img\r\n                  src=\"../../images/happycustomer.jpg\"\r\n                  alt=\"happy-customer\"\r\n                  width=\"622\"\r\n                  height=\"395\"\r\n                />\r\n              </figure>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"whyUs\">\r\n          <h2>Why us</h2>\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-4\">\r\n              <div class=\"whyUsCard\">\r\n                <div class=\"heading\">\r\n                  Get more\r\n                  <br />\r\n                  visibility\r\n                </div>\r\n                <span>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                  do eiusmod tempor incididunt.\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <div class=\"whyUsCard\">\r\n                <div class=\"heading\">\r\n                  Organize your\r\n                  <br />\r\n                  candidates\r\n                </div>\r\n                <span>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                  do eiusmod tempor incididunt.\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n              <div class=\"whyUsCard\">\r\n                <div class=\"heading\">\r\n                  Verify their\r\n                  <br />\r\n                  abilities\r\n                </div>\r\n                <span>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                  do eiusmod tempor incididunt.\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"conpaniesTrust\">\r\n          <div class=\"heading\">Companies Who Trust Us</div>\r\n          <ul>\r\n            <li>\r\n              <figure>\r\n                <img src=\"../../images/otherLogo.jpg\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n            <li>\r\n              <figure>\r\n                <img src=\"assets/images/otherLogo.png\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n            <li>\r\n              <figure>\r\n                <img src=\"assets/images/otherLogo.png\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n            <li>\r\n              <figure>\r\n                <img src=\"assets/images/otherLogo.png\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n            <li>\r\n              <figure>\r\n                <img src=\"assets/images/otherLogo.png\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n            <li>\r\n              <figure>\r\n                <img src=\"assets/images/otherLogo.png\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n            <li>\r\n              <figure>\r\n                <img src=\"assets/images/otherLogo.png\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n            <li>\r\n              <figure>\r\n                <img src=\"assets/images/otherLogo.png\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n            <li>\r\n              <figure>\r\n                <img src=\"assets/images/otherLogo.png\" alt=\"otherLogo\" />\r\n              </figure>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","export const serviceRoute = {\r\n  login: { url: \"auth/login\", type: \"post\" },\r\n  register: { url: \"auth/register\", type: \"post\" },\r\n  resetPassword: (email) => ({\r\n    url: `auth/resetpassword?email=${email}`,\r\n    type: \"get\",\r\n  }),\r\n  verifyPasswordToken: (token) => ({\r\n    url: `auth/resetpassword/${token}`,\r\n    type: \"get\",\r\n  }),\r\n  changePassword: { url: `auth/resetpassword`, type: \"post\" },\r\n  createJob: { url: \"jobs\", type: \"post\" },\r\n  getJobDetail: (jobId) => ({\r\n    url: `jobs/${jobId}`,\r\n    type: \"get\",\r\n  }),\r\n  getAllJob: { url: \"jobs\", type: \"get\" },\r\n  deleteJob: { url: \"jobs\", type: \"delete\" },\r\n  applyJob: { url: \"candidates/jobs\", type: \"post\" },\r\n  getAvailableJobs: { url: \"candidates/jobs\", type: \"get\" },\r\n  getAppliedJobs: { url: \"candidates/jobs/applied\", type: \"get\" },\r\n  getPostedJobs: { url: \"recruiters/jobs\", type: \"get\" },\r\n  getCondidateJob: (jobId) => ({\r\n    url: `recruiters/jobs/${jobId}/candidates`,\r\n    type: \"get\",\r\n  }),\r\n};\r\n","import React from \"react\";\n\nexport const Loader = () => {\n  return <div>loading.....</div>;\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { checkLoginValidation, clearLocalStorage } from \"../../utils/utils\";\r\nimport { USER_LOGIN } from \"../../store/types/login.type\";\r\nimport { serviceRoute } from \"../../apis/serviceRoute\";\r\n\r\nimport \"./login.css\";\r\nimport { Button } from \"../common/Button\";\r\nimport { Loader } from \"../common/Loader\";\r\nimport { routePath } from \"../../routes/routePath\";\r\n\r\nexport const Login = () => {\r\n  const [payload, setPayload] = useState({ email: \"\", password: \"\" });\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const { loginLoader, loginResponseErr } = useSelector((state) => state.login);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(()=> \r\n   clearLocalStorage()\r\n  ,[])\r\n  useEffect(() => {\r\n    setErrorMsg(loginResponseErr);\r\n  }, [loginResponseErr]);\r\n\r\n  const onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setErrorMsg(\"\");\r\n    setPayload({ ...payload, [name]: value });\r\n  };\r\n\r\n  const onLoginHandler = () => {\r\n    let valid = checkLoginValidation(payload);\r\n    if (valid?.isValid) {\r\n      dispatch({\r\n        type: USER_LOGIN,\r\n        payload: { ...serviceRoute.login, data: payload, history },\r\n      });\r\n    } else {\r\n      setErrorMsg(valid?.error);\r\n    }\r\n  };\r\n  const { email = \"\", password = \"\" } = payload;\r\n\r\n  if (loginLoader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"bannerSection\"></div>\r\n      <div className=\"loginSectn\">\r\n        <div className=\"heading\">Login</div>\r\n        <form>\r\n          <div className={errorMsg ? \"form-group error\" : \"form-group\"}>\r\n            <label htmlFor=\"email\">Email Address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              onChange={onChangeHandler}\r\n              value={email}\r\n              autoComplete=\"off\"\r\n              required\r\n              name=\"email\"\r\n              id=\"enail\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n          </div>\r\n          <div className={errorMsg ? \"form-group error\" : \"form-group\"}>\r\n            <label htmlFor=\"password\" className=\"passForget\">\r\n              <span>Password</span>\r\n              <span className=\"forgetPassword\">\r\n                <Link to={routePath.forgot}>Forgot your password?</Link>\r\n              </span>\r\n            </label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter you password\"\r\n              onChange={onChangeHandler}\r\n              value={password}\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n            {errorMsg ? <div className=\"errorMsg\">{errorMsg}</div> : \"\"}\r\n          </div>\r\n          <div className=\"row login_btn\">\r\n            <Button title=\"Login\" onClickHandler={onLoginHandler} />\r\n          </div>\r\n          <p>\r\n              New to MyJobs?\r\n              <span>\r\n                <Link to={routePath.signUp}> Create an account</Link>\r\n              </span>\r\n            </p>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { serviceRoute } from \"../../apis/serviceRoute\";\r\nimport { routePath } from \"../../routes/routePath\";\r\nimport { USER_SIGNUP } from \"../../store/types/login.type\";\r\nimport { checkSignupValidation } from \"../../utils/utils\";\r\nimport { Button } from \"../common/Button\";\r\nimport { Loader } from \"../common/Loader\";\r\nimport \"./login.css\";\r\n\r\nexport const SignUp = () => {\r\n  const [payload, setPayload] = useState({\r\n    email: \"\",\r\n    userRole: 0,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    name: \"\",\r\n    skills: \"\",\r\n  });\r\n  const [errorMsg, setErrorMsg] = useState([]);\r\n  const { signUpLoader, signupResponseErr } = useSelector(\r\n    (state) => state.login\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => setErrorMsg(signupResponseErr), [signupResponseErr]);\r\n\r\n  const onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setErrorMsg([]);\r\n    setPayload({ ...payload, [name]: value });\r\n  };\r\n\r\n  const onSignupHandler = () => {\r\n    let valid = checkSignupValidation(payload);\r\n\r\n    if (valid?.isValid) {\r\n      dispatch({\r\n        type: USER_SIGNUP,\r\n        payload: { ...serviceRoute.register, data: payload, history },\r\n      });\r\n    } else {\r\n      setErrorMsg([{ name: valid?.error }]);\r\n    }\r\n  };\r\n  const {\r\n    userRole,\r\n    name = \"\",\r\n    email = \"\",\r\n    password = \"\",\r\n    confirmPassword = \"\",\r\n    skills = \"\",\r\n  } = payload;\r\n\r\n  if (signUpLoader) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"bannerSection\"></div>\r\n      <div className=\"loginSectn forgotSectn\">\r\n        <div className=\"heading\">Signup</div>\r\n        <form>\r\n          <p>I’m a*</p>\r\n          <div className=\"row signup_roles\">\r\n            <div className={userRole === 0 ? \"role1\" : \"role1 notactive\"}>\r\n              <Button\r\n                title=\"Recruiter\"\r\n                onClickHandler={() => setPayload({ ...payload, userRole: 0 })}\r\n              />\r\n            </div>\r\n            <div className={userRole === 1 ? \"role2\" : \"role2 notactive\"}>\r\n              <Button\r\n                title=\"Candidate\"\r\n                onClickHandler={() => setPayload({ ...payload, userRole: 1 })}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"name\">Full Name*</label>\r\n            <input\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter your full name\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"email\">Email Address*</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              value={email}\r\n              name=\"email\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"password\">Create Password*</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              value={password}\r\n              name=\"password\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"confirmPassword\">Confirm Password*</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              className=\"form-control\"\r\n              id=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              name=\"confirmPassword\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"skills\">Skills</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter comma separated skills\"\r\n              className=\"form-control\"\r\n              id=\"skilss\"\r\n              value={skills}\r\n              name=\"skills\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          {errorMsg?.length ? (\r\n            <div className=\"error\">{errorMsg.map((err) => err.name)}</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"row login_btn\">\r\n            <Button title=\"Signup\" onClickHandler={onSignupHandler} />\r\n          </div>\r\n          <div>\r\n            Have a account?\r\n            <span>\r\n              <Link to={routePath.login}> Login</Link>\r\n            </span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FORGOT_PASSWORD } from \"../../store/types/login.type\";\r\nimport { checkForgotValidation } from \"../../utils/utils\";\r\nimport { Button } from \"../common/Button\";\r\nimport { serviceRoute } from \"../../apis/serviceRoute\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./login.css\";\r\n\r\nexport const Forgot = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const { forgotResponseErr } = useSelector((state) => state.login);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setErrorMsg(forgotResponseErr);\r\n  }, [forgotResponseErr]);\r\n\r\n  const onChangeHandler = (e) => {\r\n    setEmail(e.target.value);\r\n    setErrorMsg(\"\");\r\n  };\r\n\r\n  const forgotPasswordHandler = () => {\r\n    let valid = checkForgotValidation(email);\r\n    if (valid?.isValid) {\r\n      dispatch({\r\n        type: FORGOT_PASSWORD,\r\n        payload: { ...serviceRoute.resetPassword(email), history },\r\n      });\r\n    } else {\r\n      setErrorMsg(valid?.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bannerSection\"></div>\r\n      <div className=\"loginSectn forgotSectn\">\r\n        <div className=\"heading\">Forgot your password?</div>\r\n        <form>\r\n          <p>\r\n            Enter the email associated with your account and we’ll send you\r\n            instructions to reset your password.\r\n          </p>\r\n          <div className=\"form-group\">\r\n            <label for=\"email\">Email Address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"enter your email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={onChangeHandler}\r\n            />\r\n            {errorMsg ? <div className=\"error\">{errorMsg}</div> : \"\"}\r\n          </div>\r\n          <div className=\"row login_btn\">\r\n          <Button title=\"Submit\" onClickHandler={forgotPasswordHandler} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { serviceRoute } from \"../../apis/serviceRoute\";\r\nimport { RESET_PASSWORD } from \"../../store/types/login.type\";\r\nimport { checkResetPwdValidation } from \"../../utils/utils\";\r\nimport { Button } from \"../common/Button\";\r\nimport \"./login.css\";\r\n\r\nexport const ResetPassword = () => {\r\n  const [payload, setPayload] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const { loginResponse, resetResponseErr, resetResponse } = useSelector(\r\n    (state) => state.login\r\n  );\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setErrorMsg(resetResponseErr);\r\n  }, [resetResponseErr]);\r\n\r\n  const onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setErrorMsg([]);\r\n    setPayload({ ...payload, [name]: value });\r\n  };\r\n  const resetPasswordHandler = () => {\r\n    let valid = checkResetPwdValidation(payload);\r\n    if (valid?.isValid) {\r\n      dispatch({\r\n        type: RESET_PASSWORD,\r\n        payload: { ...serviceRoute.changePassword, data: payload, history },\r\n      });\r\n    } else {\r\n      setErrorMsg(valid?.error);\r\n    }\r\n  };\r\n  const { password = \"\", confirmPassword = \"\" } = payload;\r\n\r\n  console.log(loginResponse, \"loginResponseloginResponse\");\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"row forgot_container\">\r\n        <form>\r\n          <h2>Reset Your Password</h2>\r\n          <p>Enter your new password below.</p>\r\n          <div className=\"form-group\">\r\n            <label for=\"password\">New password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              id=\"password\"\r\n              value={password}\r\n              name=\"password\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"confirmPassword\">Confirm new password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Confirm your password\"\r\n              id=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              name=\"confirmPassword\"\r\n              onChange={onChangeHandler}\r\n            />\r\n            {errorMsg ? <div className=\"error\">{errorMsg}</div> : \"\"}\r\n          </div>\r\n          <Button title=\"Reset\" onClickHandler={resetPasswordHandler} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const POST_JOB_LOADER = \"POST_JOB_LOADER\";\nexport const POST_JOB = \"POST_JOB\";\nexport const SAVE_POST_JOB = \"SAVE_POST_JOB\";\nexport const SAVE_POST_JOB_ERROR = \"SAVE_POST_JOB_ERROR\";\n\nexport const POSTED_JOB_LOADER = \"POSTED_JOB_LOADER\";\nexport const GET_POSTED_JOB = \"GET_POSTED_JOB\";\nexport const SAVE_POSTED_JOB = \"SAVE_POSTED_JOB\";\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"../common/Button\";\nimport { serviceRoute } from \"../../apis/serviceRoute\";\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { GET_POSTED_JOB } from \"../../store/types/jobs.type\";\nimport { routePath } from \"../../routes/routePath\";\nimport { Loader } from \"../common/Loader\";\n\nimport \"./job.css\";\nimport { ViewApplicantModal } from \"./ViewApplicantModal\";\n\nexport const PostedJobs = () => {\n  const [jobsList, setJobsList] = useState([]);\n\n  const { postedJobLoader, postedJobResponse } = useSelector(\n    (state) => state.jobs\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch({\n      type: GET_POSTED_JOB,\n      payload: { ...serviceRoute.getPostedJobs, history },\n    });\n  }, []);\n\n  useEffect(() => {\n    setJobsList(postedJobResponse);\n  }, [postedJobResponse]);\n\n  console.log(jobsList, \"jobsListjobsListjobsList\", postedJobResponse);\n\n  if (postedJobLoader) {\n    return <Loader />;\n  }\n  return (\n    <>\n      <div class=\"container job-container\">\n        <div class=\"row\">\n          <div class=\"col-lg-5\">\n            <h3>Jobs posted by you</h3>\n          </div>\n          <div class=\"row postedJobs\">\n            <div class=\"col-3 job\">\n              <div class=\"job-title\">UI UX Designer</div>\n\n              <div class=\"job-desc\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt…\n              </div>\n              <div className=\"row job_bottom\">\n                <div class=\"location\">Bengaluru</div>\n                <div className=\"view-applicant\">\n                  <button type=\"button\">View applications</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n       {/* <ViewApplicantModal /> */}\n        <div className=\"no-jobs\">\n          <p>Your posted jobs will show here!</p>\n          <div className=\"row post-btn\">\n            <Button\n              title=\"Post a Job\"\n              onClickHandler={() => history.push(routePath.jobPost)}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { serviceRoute } from \"../../apis/serviceRoute\";\nimport { POST_JOB } from \"../../store/types/jobs.type\";\nimport { checkPostJobValidation } from \"../../utils/utils\";\nimport { Button } from \"../common/Button\";\nimport { Loader } from \"../common/Loader\";\n\nexport const PostJob = () => {\n  const [payload, setPayload] = useState({\n    title: \"\",\n    description: \"\",\n    location: \"\",\n  });\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [apiErrorMsg, setApiErrorMsg] = useState(\"\");\n\n  const { postJobLoader, postJobResponseErr } = useSelector(\n    (state) => state.jobs\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (postJobResponseErr) {\n      setApiErrorMsg(postJobResponseErr);\n    }\n    setApiErrorMsg(\"\");\n  }, [postJobResponseErr]);\n\n  const onChangeHandler = (e) => {\n    const { name, value } = e.target;\n    setErrorMsg(\"\");\n    setPayload({ ...payload, [name]: value });\n  };\n\n  const onLoginHandler = () => {\n    let valid = checkPostJobValidation(payload);\n    if (valid?.isValid) {\n      dispatch({\n        type: POST_JOB,\n        payload: { ...serviceRoute.createJob, data: payload, history },\n      });\n    } else {\n      setErrorMsg(valid?.error);\n    }\n  };\n  const { title = \"\", description = \"\", location = \"\" } = payload;\n\n  if (postJobLoader) {\n    return <Loader />;\n  }\n  return (\n    <>\n      <div className=\"bannerSection\"></div>\n      <div className=\"loginSectn\">\n        <div className=\"heading\">Post a Job</div>\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Job Title*</label>\n            <input\n              type=\"title\"\n              className={errorMsg ? \"form-control errorinput\" : \"form-control\"}\n              onChange={onChangeHandler}\n              value={title}\n              autoComplete=\"off\"\n              required\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"Enter job title\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description*</label>\n            <input\n              type=\"textarea\"\n              className={errorMsg ? \"form-control errorinput\" : \"form-control\"}\n              onChange={onChangeHandler}\n              value={description}\n              autoComplete=\"off\"\n              required\n              name=\"description\"\n              id=\"description\"\n              placeholder=\"Enter job description\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"location\">Location*</label>\n            <input\n              type=\"location\"\n              className={errorMsg ? \"form-control errorinput\" : \"form-control\"}\n              onChange={onChangeHandler}\n              value={location}\n              autoComplete=\"off\"\n              required\n              name=\"location\"\n              id=\"location\"\n              placeholder=\"Enter location\"\n            />\n          </div>\n          {errorMsg ? <div className=\"error\">{errorMsg}</div> : \"\"}\n          {apiErrorMsg ? <div className=\"error\">{apiErrorMsg}</div> : \"\"}\n          <div className=\"text-center\">\n            <Button title=\"Post\" onClickHandler={onLoginHandler} />\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { Header } from './components/Header'\r\nimport { Default } from \"./components/Default/Default\";\r\nimport { Home } from \"./components/Home\";\r\nimport { Login } from \"./components/Login\";\r\nimport { routePath } from \"./routes/routePath\";\r\nimport { SignUp } from \"./components/Login/SignUp\";\r\nimport { Forgot } from \"./components/Login/Forgot\";\r\nimport { ResetPassword } from \"./components/Login/ResetPassword\";\r\nimport { PostedJobs } from \"./components/Jobs/PostedJobs\";\r\n\r\nimport './global.css';\r\nimport \"./App.css\";\r\nimport { PostJob } from \"./components/Header/PostJob\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={useHistory()}>\r\n        <div className=\"main-container\">\r\n          <Header />\r\n          <Switch>\r\n            <Route exact component={Home} path={routePath.root} />\r\n            <Route exact component={Home} path={routePath.home} />\r\n            <Route exact component={Login} path={routePath.login} />\r\n            <Route exact component={SignUp} path={routePath.signUp} />\r\n            <Route exact component={Forgot} path={routePath.forgot} />\r\n            <Route exact component={ResetPassword} path={routePath.reset} />\r\n            <Route exact component={PostJob} path={routePath.jobPost} />\r\n            <Route exact component={PostedJobs} path={routePath.jobsPosted} />\r\n            <Route path={routePath.logout} component={Login} />\r\n            <Route component={Default} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  POST_JOB_LOADER,\n  SAVE_POST_JOB,\n  SAVE_POST_JOB_ERROR,\n  POSTED_JOB_LOADER,\n  SAVE_POSTED_JOB_ERROR,\n  SAVE_POSTED_JOB\n} from \"../types/jobs.type\";\n\nconst initialState = {\n  postJobLoader: false,\n  postJobResponse: null,\n  postJobResponseErr: \"\",\n  postedJobLoader: false,\n  postedJobResponse: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case POST_JOB_LOADER: {\n      return { ...state, postJobLoader: payload };\n    }\n    case SAVE_POST_JOB: {\n      return {\n        ...state,\n        postJobResponse: payload,\n        postJobResponseErr: \"\",\n        postJobLoader: false,\n      };\n    }\n    case SAVE_POST_JOB_ERROR: {\n      return {\n        ...state,\n        postJobResponseErr: payload,\n        postJobResponse: null,\n        postJobLoader: false,\n      };\n    }\n    case POSTED_JOB_LOADER: {\n      return { ...state, postedJobLoader: payload };\n    }\n    case SAVE_POSTED_JOB: {\n      return {\n        ...state,\n        postedJobResponse: payload,\n        postedJobLoader: false,\n      };\n    }\n\n    default: {\n      return { ...state };\n    }\n  }\n};\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport {\r\n  SAVE_USER_LOGIN,\r\n  LOGIN_LOADER,\r\n  SAVE_USER_SIGNUP,\r\n  SIGNUP_LOADER,\r\n  SAVE_FORGOT_PASSWORD,\r\n  SAVE_FORGOT_PASSWORD_ERROR,\r\n  SAVE_USER_LOGIN_ERROR,\r\n  SAVE_USER_SIGNUP_ERROR,\r\n  SAVE_RESET_PASSWORD_ERROR,\r\n  SAVE_RESET_PASSWORD,\r\n} from \"../types/login.type\";\r\n\r\nconst initialState = {\r\n  loginLoader: false,\r\n  loginResponse: null,\r\n  loginResponseErr: \"\",\r\n  signUpLoader: false,\r\n  signUpResponse: null,\r\n  signupResponseErr: '',\r\n  forgotResponse: null,\r\n  forgotResponseErr: \"\",\r\n  resetResponse: null,\r\n  resetResponseErr: '',\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SAVE_USER_LOGIN: {\r\n      return { ...state, loginResponse: payload, loginResponseErr: '', loginLoader: false };\r\n    }\r\n    case SAVE_USER_LOGIN_ERROR: {\r\n      return { ...state, loginResponseErr: payload, loginResponse: null, loginLoader: false };\r\n    }\r\n    case LOGIN_LOADER: {\r\n      return { ...state, loginLoader: payload };\r\n    }\r\n    case SAVE_USER_SIGNUP: {\r\n      return { ...state, signUpResponse: payload, signupResponseErr: '', signUpLoader: false };\r\n    }\r\n    case SAVE_USER_SIGNUP_ERROR: {\r\n      return { ...state, signupResponseErr: payload, signUpResponse: null, signUpLoader: false };\r\n    }\r\n    case SIGNUP_LOADER: {\r\n      return { ...state, signUpLoader: payload };\r\n    }\r\n    case SAVE_FORGOT_PASSWORD: {\r\n      return { ...state, forgotResponse: payload, forgotResponseErr: '' };\r\n    }\r\n    case SAVE_FORGOT_PASSWORD_ERROR: {\r\n      return { ...state, forgotResponseErr: payload, forgotResponse: null };\r\n    }\r\n    case SAVE_RESET_PASSWORD: {\r\n      return { ...state, resetResponse: payload, resetResponseErr: '' };\r\n    }\r\n    case SAVE_RESET_PASSWORD_ERROR: {\r\n      return { ...state, resetResponseErr: payload, resetResponse: null };\r\n    }\r\n\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport jobsReducer from \"./jobs.reducer\";\r\nimport loginReducer from \"./login.reducer\";\r\n\r\nexport default combineReducers({\r\n login: loginReducer,\r\n jobs: jobsReducer\r\n});\r\n","import axios from \"axios\";\r\nimport { routePath } from \"../routes/routePath\";\r\nimport { getLocalStorage } from \"../utils/utils\";\r\n\r\nconst baseURL = process.env.REACT_APP_BASE_URL;\r\nconst axiosInstance = axios.create({\r\n  baseURL,\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      if (error.response.status === 401) {\r\n        //show toast here if any error comes\r\n        console.log(error?.response?.data?.message);\r\n      }\r\n\r\n      return Promise.reject(error?.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst config = {\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n    authorization: `Bearer ${getLocalStorage(\"token\")}`,\r\n  },\r\n};\r\n\r\nexport const axiosRequest = async (url, type, history, data = undefined) => {\r\n  try {\r\n    let response = {};\r\n    console.log({ url, type, token: getLocalStorage(\"token\"), config });\r\n\r\n    if (data) {\r\n      response = await axiosInstance[type](url, data, config);\r\n    } else {\r\n      response = await axiosInstance.get(url, config);\r\n    }\r\n    console.log({ response });\r\n    return response?.data;\r\n  } catch (error) {\r\n    console.log(error, \"axiosRequesterrorerror\");\r\n    if (error.code === 401) {\r\n      // history.push(routePath.login)\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { axiosRequest } from \"../../apis/axios.config\";\nimport { routePath } from \"../../routes/routePath\";\nimport {\n  GET_POSTED_JOB,\n  POSTED_JOB_LOADER,\n  POST_JOB,\n  POST_JOB_LOADER,\n  SAVE_POSTED_JOB,\n  SAVE_POSTED_JOB_ERROR,\n  SAVE_POST_JOB,\n  SAVE_POST_JOB_ERROR,\n} from \"../types/jobs.type\";\n\nfunction* jobPost(action) {\n  const { url, type, data, history } = action.payload;\n  yield put({ type: POST_JOB_LOADER, payload: true });\n  try {\n    const res = yield call(() => axiosRequest(url, type, history, data));\n    if (res) {\n      yield put({ type: SAVE_POST_JOB, payload: res });\n      history.push(routePath.jobsPosted);\n    }\n  } catch (err) {\n    yield put({ type: SAVE_POST_JOB_ERROR, payload: err.message });\n    yield put({ type: POST_JOB_LOADER, payload: false });\n  }\n}\n\nfunction* postJob() {\n  yield takeEvery(POST_JOB, jobPost);\n}\n\n\nfunction* getJobsPosted(action) {\n  const { url, type, history } = action.payload;\n  yield put({ type: POSTED_JOB_LOADER, payload: true });\n  try {\n    const res = yield call(() => axiosRequest(url, type,history));\n    if (res) {\n      yield put({ type: SAVE_POSTED_JOB, payload: res });\n      history.push(routePath.jobsPosted);\n    }\n  } catch (err) {\n    yield put({ type: SAVE_POSTED_JOB, payload: [] });\n    yield put({ type: POSTED_JOB_LOADER, payload: false });\n  }\n}\n\nfunction* getPostedJob() {\n  yield takeEvery(GET_POSTED_JOB, getJobsPosted);\n}\n\nconst jobSaga = {\n  postJob: postJob(),\n  getPostedJob: getPostedJob(),\n};\n\nexport default jobSaga;\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { axiosRequest } from \"../../apis/axios.config\";\r\nimport {\r\n  USER_LOGIN,\r\n  SAVE_USER_LOGIN,\r\n  LOGIN_LOADER,\r\n  FORGOT_PASSWORD,\r\n  USER_SIGNUP,\r\n  SIGNUP_LOADER,\r\n  SAVE_USER_SIGNUP,\r\n  SAVE_FORGOT_PASSWORD,\r\n  SAVE_FORGOT_PASSWORD_ERROR,\r\n  SAVE_USER_LOGIN_ERROR,\r\n  SAVE_USER_SIGNUP_ERROR,\r\n  SAVE_RESET_PASSWORD,\r\n  SAVE_RESET_PASSWORD_ERROR,\r\n  RESET_PASSWORD,\r\n} from \"../types/login.type\";\r\nimport { getLocalStorage, setLocalStorage } from \"../../utils/utils\";\r\nimport { routePath } from \"../../routes/routePath\";\r\n\r\nfunction* userLogin(action) {\r\n  const { url, type, data, history } = action.payload;\r\n  yield put({ type: LOGIN_LOADER, payload: true });\r\n  try {\r\n    const res = yield call(() => axiosRequest(url, type, history, data));\r\n    if (res) {\r\n      setLocalStorage(\"token\", res?.token);\r\n      yield put({ type: SAVE_USER_LOGIN, payload: res });\r\n      history.push(routePath.jobsPosted);\r\n    }\r\n  } catch (err) {\r\n    history?.push(routePath.login);\r\n    yield put({ type: SAVE_USER_LOGIN_ERROR, payload: err.message });\r\n    yield put({ type: LOGIN_LOADER, payload: false });\r\n  }\r\n}\r\n\r\nfunction* loginUser() {\r\n  yield takeEvery(USER_LOGIN, userLogin);\r\n}\r\n\r\nfunction* signUpLogin(action) {\r\n  const { url, type, data, history } = action.payload;\r\n  yield put({ type: SIGNUP_LOADER, payload: true });\r\n  try {\r\n    const res = yield call(() => axiosRequest(url, type, history, data));\r\n    if (res) {\r\n      yield put({ type: SAVE_USER_SIGNUP, payload: res?.body });\r\n      history.push(routePath.login);\r\n    }\r\n  } catch (err) {\r\n    history?.push(routePath.signUp);\r\n    yield put({ type: SAVE_USER_SIGNUP_ERROR, payload: err.errors });\r\n    yield put({ type: SIGNUP_LOADER, payload: false });\r\n  }\r\n}\r\n\r\nfunction* signUpUser() {\r\n  yield takeEvery(USER_SIGNUP, signUpLogin);\r\n}\r\n\r\nfunction* pwdForgot(action) {\r\n  const { url, type, history } = action.payload;\r\n  try {\r\n    const res = yield call(() => axiosRequest(url, type, history));\r\n    if (res) {\r\n      if (res?.token) {\r\n        setLocalStorage(\"token\", res?.token);\r\n      }\r\n      yield put({ type: SAVE_FORGOT_PASSWORD, payload: res });\r\n      history.push(routePath.login);\r\n    }\r\n  } catch (err) {\r\n    if (err.code === 422) {\r\n      history.push(routePath.login);\r\n      yield put({ type: SAVE_USER_LOGIN_ERROR, payload: err.message });\r\n    } else {\r\n      yield put({ type: SAVE_FORGOT_PASSWORD_ERROR, payload: err.message });\r\n      history?.push(routePath.forgot);\r\n    }\r\n  }\r\n}\r\n\r\nfunction* forgotPwd() {\r\n  yield takeEvery(FORGOT_PASSWORD, pwdForgot);\r\n}\r\n\r\nfunction* pwdReset(action) {\r\n  const { url, type, history, data } = action.payload;\r\n  try {\r\n    const res = yield call(() =>\r\n      axiosRequest(url, type, history, {\r\n        ...data,\r\n        token: getLocalStorage(\"token\"),\r\n      })\r\n    );\r\n    if (res) {\r\n      yield put({ type: SAVE_RESET_PASSWORD, payload: res });\r\n      history.push(routePath.login);\r\n    }\r\n  } catch (err) {\r\n    yield put({ type: SAVE_RESET_PASSWORD_ERROR, payload: err.message });\r\n    history?.push(routePath.reset);\r\n  }\r\n}\r\n\r\nfunction* resetPwd() {\r\n  yield takeEvery(RESET_PASSWORD, pwdReset);\r\n}\r\n\r\nconst loginSaga = {\r\n  loginUser: loginUser(),\r\n  signUpUser: signUpUser(),\r\n  forgotPwd: forgotPwd(),\r\n  resetPwd: resetPwd(),\r\n};\r\n\r\nexport default loginSaga;\r\n","import { all } from \"redux-saga/effects\";\r\nimport jobSaga from \"./jobs.saga\";\r\nimport loginSaga from \"./login.saga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    loginSaga.loginUser,\r\n    loginSaga.signUpUser,\r\n    loginSaga.forgotPwd,\r\n    loginSaga.resetPwd,\r\n    jobSaga.postJob,\r\n    jobSaga.getPostedJob,\r\n    \r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport reducer from \"./reducers/reducer\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\nlet store = createStore(persistedReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport let persistReduxStore = persistStore(store);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport store, { persistReduxStore } from \"./store/store.config\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistReduxStore}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}